// // Remember, we're gonna use strict mode in all scripts now!
// 'use strict';

// // const x = 23;

// // const calcAge = birthYear => 2037 - birthYear;
// // console.log(1991);

// // const temperatures = [-3, -2, -6, -1, 'error', 9, 13, 17, 14, 9, 5];

// //calculate the temperature amplitude.
// //understand the problem : amplitude means the diff between high and low temp
// // - How to compute max and min temperatures
// // - What's a sensor error ? What to do ?

// // 2) Breaking up into sub problems
// //How to ignore errors
// //Find max value and Min value
// // subtract min from max and return amplitude

// // const calcTempAmplitude = function (temps) {
// //   let max = temps[0];
// //   let min = temps[0];
// //   for (let i = 0; i < temps.length; i++) {
// //     const curTemp = temps[i];
// //     if (typeof curTemp !== 'number') continue;

// //     if (curTemp > max) max = curTemp;
// //     if (curTemp < min) min = curTemp;
// //   }
// //   console.log(max, min);
// //   return max - min;
// // };

// // const amplitude = calcTempAmplitude(temperatures);
// // console.log(amplitude);
// //  max = 3
// //  max = 7

// // Problem 2
// // Function should recieve 2 arrays of temps

// // 1) Understand the problem
// // - With 2 arrays do we implement functionality 2x ? No, just merge them

// // 2) Breaking into sub problems
// // - Merge 2 arrays

// // const calcTempAmplitudeNew = function (t1, t2) {
// //   const array1 = ['a', 'b', 'c'];
// //   const array2 = ['a', 'b', 'c'];
// //   const array3 = array1.concat(array2);

// //   const temps = t1.concat(t2);
// //   console.log(temps);

// //   let max = temps[0];
// //   let min = temps[0];
// //   for (let i = 0; i < temps.length; i++) {
// //     const curTemp = temps[i];
// //     if (typeof curTemp !== 'number') continue;

// //     if (curTemp > max) max = curTemp;
// //     if (curTemp < min) min = curTemp;
// //   }
// //   console.log(max, min);
// //   return max - min;
// // };

// // const amplitudeNew = calcTempAmplitudeNew([3, 5, 1], [9, 0, 5]);
// // console.log(amplitudeNew);

// // const measureKelvin = function () {
// //   const measurement = {
// //     type: 'temp',
// //     unit: 'celsius',

// //     //C) Fix

// //     // value: Number(prompt('Degrees celsius: ')),
// //     value: 10,
// //   };

// //   // B) Find bug
// //   console.log(measurement);
// //   console.table(measurement);
// //   //   console.log(measurement.value);

// //   const kelvin = measurement.value + 273;
// //   return kelvin;
// // };
// // // A) Identify the bug
// // console.log(measureKelvin());

// // //Using a debugger

// // const calcTempAmplitudeBug = function (t1, t2) {
// //   const temps = t1.concat(t2);
// //   console.log(temps);

// //   let max = temps[0];
// //   let min = temps[0];
// //   for (let i = 0; i < temps.length; i++) {
// //     const curTemp = temps[i];
// //     if (typeof curTemp !== 'number') continue;

// //     if (curTemp > max) max = curTemp;
// //     if (curTemp < min) min = curTemp;
// //   }
// //   console.log(max, min);
// //   return max - min;
// // };

// // const amplitudeBug = calcTempAmplitudeBug([3, 5, 1], [9, 4, 5]);
// // //  A) Identify Bug
// // console.log(amplitudeBug);

// //CODING CHALLENGE 1

// const data1 = [17, 21, 23];
// const data2 = [12, 5, -5, 0, 4];
// const sum = [];

// const printForecast = function (arr) {
//   let str = '';
//   for (let i = 0; i < arr.length; i++) {
//     str = str + `...${arr[i]}C in ${i + 1} days`;
//   }

//   console.log(str);
// };

// printForecast(data1);
